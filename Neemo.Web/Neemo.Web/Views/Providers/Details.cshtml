@using System.Globalization
@using Neemo
@using Neemo.Providers
@model ProviderDetailView

@{
    Layout = "~/Views/Shared/_Magento.cshtml";
    ViewBag.Title = Model.ProviderName;
}

<div class="ma-main-container col2-right-layout">
    <div class="main provider-details">
        <div class="breadcrumbs">
            <ul>
                <li>
                    @Html.ActionLink("Home", "Index", "Home")
                    <span>/ </span>
                </li>
                <li class="product">
                    <strong>@Model.ProviderName</strong>
                </li>
            </ul>
        </div>
        <div class="row-fluid provider-info">
            <div class="col-main span12 ">
                <div class="provider-name">
                    <h1>@Model.ProviderName</h1>
                </div>
            </div>

            @*Photo*@
            <div class="span3">
                <img src="@Url.Image(Model.Image)" class="thumbnail" />
            </div>

            @*Details*@
            <div class="span4">
                <div class="details">
                    @Html.Raw(Model.Description)
                </div>

                <table>
                    <tr>
                        <td></td>
                        <td></td>
                    </tr>
                </table>

                <div class="row-fluid">
                    <div class="span12">

                        <div class="provider-service-list">
                            <span class="minor-title">User Reviews (@Model.CustomerReviews.Count):</span>
                            <div data-provider-summary-rating="@Model.Rating" data-path="@Url.Content("~/Components/raty/images")"></div>
                            <a href="#writeReview">Write a review</a>
                        </div>
                    </div>
                </div>
            </div>

            @*Contact Details*@
            <div class="span4">
                <div class="provider-contact details">
                    @ContactStub(Model.Phone, "fa-phone-square", "tel:" + Model.Phone)
                    @ContactStub(Model.Mobile, "fa-phone-square", "tel:" + Model.Mobile)
                    @ContactStub(Model.EmailAddress, "fa-envelope", "mailto:" + Model.EmailAddress, "_blank")
                    @ContactStub("Website", "fa-globe", Model.URL, "_blank")
                    @ContactStub(Model.Address, "fa-map-marker", "http://maps.google.com/?q=" + Model.Address, "_blank")
                </div>
            </div>
        </div>

        @*Available Services*@
        <div class="row-fluid">
            <div class="span12">
                @if (Model.AvailableServices.Count > 0)
                {
                    <div class="available-services">
                        <span class="minor-title">Available Services:</span>

                        @foreach (var service in Model.AvailableServices)
                        {
                            <span>
                                <span class="label label-inverse">@service</span>
                            </span>
                        }
                    </div>
                }
            </div>
        </div>


        <div class="row-fluid">
            <div class="span12">
                <div class="provider-map" data-latitude="@Model.Latitude" data-longitude="@Model.Longitude" data-provider-address="@Model.Address"></div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span12 write-review" id="reviewComplete" style="display:none;">
                <div class="alert alert-success">
                    You review has been submitted successfully. Thank you.
                </div>
            </div>
        </div>

        <div class="row-fluid" id="writeReview">
            @if (Model.CurrentUsername.IsNullOrEmpty())
            {
                <div class="span12 write-review">
                    <div class="alert alert-info">
                        Want to leave a rating for @Model.ProviderName? <a href='@Url.Login(withReturnUrl:true)'>Please login first.</a>
                    </div>
                </div>
            }
            else
            {
                <div class="span12 write-review">
                    <div class="provider-title">
                        <h2>Write a Review</h2>
                    </div>

                    <div class="control-group">
                        <label class="control-label" for="providerRating">Rating</label>
                        <div class="controls">
                            <div id="providerRating" data-path="@Url.Content("~/Components/raty/images")"></div>
                        </div>
                    </div>

                    @if (!User.Identity.IsAuthenticated)
                    {
                        <div class="control-group">
                            <label class="control-label" for="comments">Name</label>
                            <div class="controls">
                                <input id="reviewerName" class="input-block-level" placeholder="Full Name / Username" value="@Model.CurrentUsername" />
                            </div>
                        </div>
                    }

                    <div class="control-group">
                        <label class="control-label" for="comments">Comment</label>
                        <div class="controls">
                            <textarea id="comments" class="control input-block-level" rows="4" placeholder="Please leave your comments about your experience"></textarea>
                        </div>
                    </div>

                    <div class="alert alert-danger" id="ratingInvalid" style="display: none;">
                        Name and Comment fields are required.
                    </div>

                    <div class="form-actions">
                        <button class="btn btn-primary" id="submitReview">Submit</button>
                    </div>

                </div>
            }
        </div>

        <div class="row-fluid">
            @*Reviews*@
            <div class="span12 reviews">
                <div class="provider-title">
                    <h2>Reviews</h2>
                </div>

                @if (Model.CustomerReviews.Count == 0)
                {
                    <p>No reviews at the moment. Be the first to provide feedback!</p>
                }
                else
                {
                    foreach (var review in Model.CustomerReviews.OrderByDescending(c => c.CreatedDateTime))
                    {
                        <div class="review">
                            <div class="review-header">
                                <div style="display: inline" data-provider-summary-rating="@review.Score" data-path="@Url.Content("~/Components/raty/images")"></div> |
                                <i class="fa fa-user"></i> @review.CreatedByUser |
                                <i class="fa fa-calendar-o"></i> @review.CreatedDateTime.GetValueOrDefault().ToString("dd MMM yyyy")
                            </div>
                            <div>@review.Comment</div>
                        </div>
                    }
                }

            </div>
        </div>
    </div>
</div>

@helper ContactStub(string value, string icon, string href, string target = "_self")
{
    if (value.HasValue())
    {
        <a href="@href" target="@target">
            <i class="fa @icon"></i>
            @value
        </a>
    }
}

@section Scripts
{
    <script>
        (function ($, neemo) {

            neemo.providerReview('@Model.ProviderId',
                '@Model.ProviderName',
                $('#providerRating'),
                $('#reviewerName'),
                @User.Identity.IsAuthenticated.ToString().ToLower(),
                $('#comments'),
                $('#submitReview'),
                '@Url.Action("AddReview", "Providers")',
                ratingComplete,
                invalid);

            function ratingComplete() {
                $('#reviewComplete').show();
                $('#writeReview').hide();
            }

            function invalid() {
                $('#ratingInvalid').show();
            }

        })(jQuery, neemo);
    </script>
}